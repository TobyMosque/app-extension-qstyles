(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["2d0e228b"],{"7e07":function(e){e.exports={type:"component",props:{value:{type:"Object",desc:"Model of the component of type { min, max } (both values must be between global min/max); Either use this property (along with a listener for 'input' event) OR use v-model directive",definition:{min:{type:"Number",desc:"Model value for left thumb",examples:[2]},max:{type:"Number",desc:"Model value for right thumb",examples:[12]}},examples:['v-model="positionModel"'],category:"model"},min:{type:"Number",desc:"Minimum value of the model",default:0,examples:[':min="0"'],category:"model"},max:{type:"Number",desc:"Maximum value of the model",default:100,examples:[':max="100"'],category:"model"},step:{type:"Number",desc:"Specify step amount between valid values (> 0.0); When step equals to 0 it defines infinite granularity",default:1,examples:[':step="1"'],category:"model"},"drag-range":{type:"Boolean",desc:"User can drag range instead of just the two thumbs",category:"content"},"drag-range-only":{type:"Boolean",desc:"User can drag only the range instead and NOT the two thumbs",category:"content"},color:{type:"String",desc:"Color name for component from the Quasar Color Palette",examples:["primary","teal-10"],category:"style"},label:{type:"Boolean",desc:"Popup labels (for left and right thumbs) when user clicks/taps on the slider thumb and moves it",category:"labels"},"label-color":{type:"String",desc:"Color name for labels background from the Quasar Color Palette; Applies to both labels, unless specific label color props are used",examples:["primary","teal-10"],category:"labels"},"left-label-color":{type:"String",desc:"Color name for left label background from the Quasar Color Palette",examples:["primary","teal-10"],category:"labels"},"right-label-color":{type:"String",desc:"Color name for right label background from the Quasar Color Palette",examples:["primary","teal-10"],category:"labels"},"left-label-value":{type:["String","Number"],desc:"Override default label for min value",examples:[":left-label-value=\"model.min + 'px'\""],category:"labels"},"right-label-value":{type:["String","Number"],desc:"Override default label for max value",examples:[":right-label-value=\"model.max + 'px'\""],category:"labels"},"label-always":{type:"Boolean",desc:"Always display the labels",category:"labels"},markers:{type:"Boolean",desc:"Display markers on the track, one for each possible value for the model",category:"content"},snap:{type:"Boolean",desc:"Snap thumbs on valid values, rather than sliding freely; Suggestion: use with 'step' prop",category:"content"},dark:{type:"Boolean",desc:"Notify the component that the background is a dark color",category:"style"},dense:{type:"Boolean",desc:"Dense mode; occupies less space",category:"style"},disable:{type:"Boolean",desc:"Put component in disabled mode",category:"state"},readonly:{type:"Boolean",desc:"Put component in readonly mode",category:"state"},tabindex:{type:["Number","String"],desc:"Tabindex HTML attribute value",examples:["0","100"],category:"general"}},events:{input:{desc:"Emitted when component's model changes; Is also used by v-model",params:{value:{type:"Any",desc:"New model value",required:!0}}},change:{desc:"Emitted on lazy model value change (after user slides then releases thumb)",params:{value:{type:"Any",desc:"New model value",required:!0}}}}}}}]);